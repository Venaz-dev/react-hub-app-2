{"version":3,"sources":["components/Hubdata.js","components/DisplayHub.js","components/HubDetails.js","components/SearchComponent.js","App.js","serviceWorker.js","index.js"],"names":["HubData","id","name","address","city","imageURL","DisplayHub","state","Hubs","this","props","detailsClick","ShowHub","filter","c","toLowerCase","includes","map","hub","className","style","backgroundImage","to","onClick","background","padding","React","Component","HubDetails","details","height","SearchComponent","updateCity","event","setState","target","value","marginTop","textTransform","fontSize","onSubmit","handleSubmit","onChange","selected","updateQuery","App","hubs","hubDet","preventDefault","console","log","formQuery","hubIndex","index","hubState","textAlign","color","margin","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ab01cd46.chunk.js","sourcesContent":["const HubData = [\r\n    {\r\n        id: \"ken\",\r\n        name: \"Ken Sarowiwa Innovation Hub\",\r\n        address: \"Town Road , Town\",\r\n        city: \"Port Harcourt\",\r\n        imageURL: \"https://www.venazinsights.com/wp-content/uploads/2020/05/ken-saro.jpg\"\r\n    },\r\n    {\r\n        id: \"tech\",\r\n        name: \"Tech Creek\",\r\n        address: \"Opposite Pleasure Park\",\r\n        city: \"Port Harcourt\",\r\n        imageURL: \"https://www.venazinsights.com/wp-content/uploads/2020/05/Tech-Creek.png\"\r\n    },\r\n    {\r\n        id: \"olotu\",\r\n        name: \"Olotu Square\",\r\n        address: \"Opposite Pleasure Park\",\r\n        city: \"Port Harcourt\",\r\n        imageURL: \"https://www.venazinsights.com/wp-content/uploads/2020/05/olotu-square.png\"\r\n    },\r\n    {\r\n        id: \"trial\",\r\n        name: \"Her tech Trail\",\r\n        address: \"Opposite Pleasure Park\",\r\n        city: \"Port Harcourt\",\r\n        imageURL: \"https://www.venazinsights.com/wp-content/uploads/2020/04/gears5.jpg\"\r\n    },\r\n    {\r\n        id: \"test\",\r\n        name: \"Her test Trail\",\r\n        address: \"Opposite Pleasure Park, Aba Road, Obio Akpor, elibolo rumumasi\",\r\n        city: \"lagos\",\r\n        imageURL: \"https://www.venazinsights.com/wp-content/uploads/2020/04/gears5.jpg\"\r\n    }\r\n]\r\n\r\nexport default HubData\r\n/*\r\n    {\r\n        id: \"olotu\",\r\n        name: \"Olotu Square\",\r\n        address: \"Opposite Pleasure Park\",\r\n        city: \"Port Harcourt\",\r\n        imageURL: \"https://www.venazinsights.com/wp-content/uploads/2020/05/olotu-square.png\"\r\n    },\r\n    {\r\n        id: \"trial\",\r\n        name: \"Her tech Trail\",\r\n        address: \"Opposite Pleasure Park\",\r\n        city: \"Port Harcourt\",\r\n        imageURL: \"https://www.venazinsights.com/wp-content/uploads/2020/04/gears5.jpg\"\r\n    },\r\n    {\r\n        id: \"test\",\r\n        name: \"Her test Trail\",\r\n        address: \"Opposite Pleasure Park\",\r\n        city: \"Port Harcourt\",\r\n        imageURL: \"https://www.venazinsights.com/wp-content/uploads/2020/04/gears5.jpg\"\r\n    } */","import React from \"react\"\r\nimport HubData from \"./Hubdata\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass DisplayHub extends React.Component{\r\n    state = {\r\n        Hubs: HubData\r\n    }\r\n    render(){\r\n        const {detailsClick, city} = this.props\r\n        const {Hubs} = this.state\r\n\r\n        const showingCity = city === \"\" ? \r\n                            Hubs : \r\n                            Hubs.filter(c => (\r\n                                c.city.toLowerCase().includes(city.toLowerCase())\r\n                            ))\r\n        const ShowHub = showingCity.map(hub =>\r\n            <div className=\"hub-list-item\" >\r\n                <div \r\n                    className=\"hub-image\" \r\n                    style={{\r\n                            backgroundImage : `url(${hub.imageURL})`}}\r\n                >\r\n                <label>{hub.city}</label>\r\n                </div> \r\n                <div className=\"hub-details\" >\r\n                    <h4 className=\"hub-title\">{hub.name}</h4>\r\n                    <label className=\"address\"> {hub.address}</label>\r\n                </div>\r\n                <Link  \r\n                     className=\"more-details\" \r\n                    to=\"/details\"\r\n                    onClick={() => detailsClick(hub.id)}>More Details\r\n                </Link>\r\n            \r\n            </div>\r\n            )\r\n\r\n        return(\r\n            <body>\r\n                <div style={{background: 'white', padding:'30px'}}>\r\n                    <h1 className=\"hub-title\">Featured Hubs in your City</h1>\r\n                </div>\r\n                <div className=\"hub-list\">\r\n                    \r\n                \r\n                    {ShowHub}\r\n                </div>\r\n            </body>\r\n        )\r\n    \r\n    }\r\n}\r\n\r\nexport default DisplayHub","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass HubDetails extends React.Component{\r\n    render(){\r\n        const {details} = this.props\r\n        return(\r\n            <div\r\n                style={{\r\n                     background: 'white', height: \"auto\"\r\n                }} \r\n            >\r\n                <Link to =\"/\" className=\"close-create-contact\">Back</Link>\r\n                <div \r\n                    className=\"hub-image\" \r\n                    style={{\r\n                            backgroundImage : `url(${details.imageURL})`}}\r\n                ></div> \r\n                <div className=\"contact-details\" >\r\n                    <h2 className=\"hub-title\">{details.name}</h2>\r\n                    <p className=\"address\"> {details.address}</p>   \r\n                    <p><label>City: </label> {details.city}</p>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HubDetails","import React from \"react\"\r\n\r\nclass SearchComponent extends React.Component {\r\n    state = {\r\n        city: \"\"\r\n    }\r\n    updateCity = (event) =>{\r\n        this.setState ({\r\n            city : event.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"hub-filter\">\r\n                <h1 className = \"search-description\"\r\n                    style ={{marginTop: '10%'}}\r\n                > \r\n                    Find the best Tech Hubs within your city </h1>\r\n                <h3 \r\n                    className=\"search-description\"\r\n                    style={{textTransform: \"capitalize\", fontSize: \"26px\" }}\r\n                > \r\n                    Connect with Developers and Designers\r\n                </h3>\r\n                <form className=\"search-form\" onSubmit={this.props.handleSubmit}>\r\n                    \r\n                    <select \r\n                        name = \"city\" \r\n                        value={this.state.city} \r\n                        className=\"search-hubs\"\r\n                        onChange={this.updateCity}\r\n                    >\r\n                            <option value=\"\" selected> Select a City </option>\r\n                            <option value=\"port harcourt\"> Port Harcourt</option>\r\n                            <option value=\"lagos\"> Lagos</option>\r\n                    </select>\r\n                    \r\n                    <button className=\"search-button\"\r\n                        onClick={() => this.props.updateQuery(this.state.city)}> FIND A HUB </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SearchComponent","import React from 'react';\nimport {Route} from \"react-router-dom\"\nimport './contactStyle.css';\nimport \"./mobileStyle.css\"\nimport DisplayHub from \"./components/DisplayHub\"\nimport HubDetails from \"./components/HubDetails\"\nimport HubData from \"./components/Hubdata\"\nimport SearchComponent from \"./components/SearchComponent\"\n\n\nclass App extends React.Component{\n  state={\n    hubs: HubData,\n    hubDet: \"\",\n    city: \"\"\n  }\n  // Function to update the \"city\" state from the \"SearchComponent\" Component\n  \n  handleSubmit = (event) => {\n    event.preventDefault()\n    console.log(this.state.city)\n    \n  }\n  updateQuery = (formQuery) => {\n    this.setState({\n        city: formQuery\n    })\n}\n  detailsClick = (id) => {\n    let hubIndex\n    this.state.hubs.map((hub, index) => {\n      if (hub.id === id){\n        hubIndex = index\n        \n      }\n      return hubIndex\n    })\n    const hubState = this.state.hubs[hubIndex]\n    this.setState({\n      hubDet: hubState\n    })\n    \n\n  }\n  render(){\n    return(\n      <div>\n        \n        <h1 style={{textAlign: \"center\", color:'white', background:'#db3944', margin:'0' }}>\n            HUB FINDER\n        </h1>\n        \n        <Route exact path=\"/\" render={() => (\n          <SearchComponent \n            handleSubmit= {this.handleSubmit} \n            updateQuery= {this.updateQuery} \n          />\n        )}/>\n        <Route exact path=\"/\" render={() => (\n          <DisplayHub  city={this.state.city} detailsClick = {this.detailsClick}/>\n        )}/> \n          \n        <Route path=\"/details\">\n          <HubDetails details= {this.state.hubDet}/>\n        </Route>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render((\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n  </BrowserRouter>),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}